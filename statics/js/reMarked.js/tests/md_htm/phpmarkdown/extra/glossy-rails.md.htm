<h1>Rails 3.2 playground <a href="http://travis-ci.org/hongymagic/glossy-rails"><img src="https://secure.travis-ci.org/hongymagic/glossy-rails.png" alt="Build Status" /></a></h1>

<p>This project was created so I could better understand Rails 3.2 and <code>ruby-lang</code>. Occasional fuck ups <em>are</em> okay.</p>

<h2>Still to learn</h2>

<ol>
<li><del>How model validation works :client, :server, :anything and :everything</del></li>
<li>Request life-cycle :filters, :actions, :redirects</li>
<li>Fucking <code>routes</code>.</li>
<li><del>Why do every <code>gem</code> introduce a new fucking <code>config</code> file</del></li>
<li><del>Introduce some client-side scripts :serve them correctly</del></li>
<li>Write some tests</li>
<li>Write some <code>Selenium</code> tests</li>
<li>Write some <code>db:seeds</code></li>
<li>Read more about Rails 3.2 here: http://guides.rubyonrails.org/3_2_release_notes.html</li>
</ol>

<h2>TODO</h2>

<p>In the order I wish to implement:</p>

<ol>
<li>Complete Backbone.js routes and views</li>
<li><del>Convert views/templates to use <code>Mustache</code> (this is so much easier on <code>Node.js</code>)</del></li>
<li><del>Re-create server views that work without Backbone.js</del></li>
<li><del>Styling, add some CSS3 animations (without JS hooks for triggering animation)</del></li>
</ol>

<h2>Findings</h2>

<p>I expect to expand on these findings below sometime soon. In the meantime, you'll have to put up with vague, abstract points notations.</p>

<ol>
<li>Rails 3.2 + <code>CoffeeScript</code> â€“ I will never understand why. I personally think <code>CoffeeScript</code> integration should be a choice, not default</li>
<li>Basic model validation seems pretty simple, and at this stage the next step in this direction would be to find out how to write <code>custom_validators</code> and hooking them up to models</li>
<li>Configuration for new <code>gems</code> are <em>minimal</em>. I like the idea of <code>initializers</code></li>
<li>The new <a href="http://edgeguides.rubyonrails.org/asset_pipeline.html">Asset Pipeline</a> is fairly trivial</li>
</ol>
